@page "/servers"

<PageTitle>Server Management</PageTitle>

<div class="d-flex justify-content-between align-items-center mb-4">
    <div>
        <h2 class="text-primary mb-1">Server Management</h2>
        <p class="text-muted">Monitor and manage your server infrastructure</p>
    </div>
    <div class="d-flex gap-3 align-items-center">
        <div class="filter-dropdown">
            <label class="form-label mb-1 text-muted small">Filter by City</label>
            <select class="form-select form-select-modern" @onchange="OnCityFilterChanged">
                <option value="">All Cities (@allServers.Count servers)</option>
                @foreach (var city in availableCities)
                {
                    var cityCount = ServersRepository.GetServersByCity(city).Count;
                    <option value="@city" selected="@(selectedCity == city)">@city (@cityCount servers)</option>
                }
            </select>
        </div>
        <button class="btn btn-primary btn-add-server">
            <i class="bi bi-plus-circle me-2"></i>Add Server
        </button>
    </div>
</div>

<div class="row">
    @foreach (var server in servers)
    {
        <div class="col-lg-6 col-xl-4">
            <ServerComponent ServerData="@server" />
        </div>
    }
</div>

@if (!servers.Any())
{
    <div class="text-center py-5">
        <i class="bi bi-server display-1 text-muted"></i>
        <h4 class="text-muted mt-3">No servers configured</h4>
        <p class="text-muted">Add your first server to get started</p>
    </div>
}

@code {
    private List<Server> servers = new();
    private List<Server> allServers = new();
    private List<string> availableCities = new();
    private string selectedCity = "";

    protected override void OnInitialized()
    {
        allServers = ServersRepository.GetServers();
        availableCities = ServersRepository.GetDistinctCities();
        servers = allServers;
    }

    private void OnCityFilterChanged(ChangeEventArgs e)
    {
        selectedCity = e.Value?.ToString() ?? "";

        if (string.IsNullOrEmpty(selectedCity))
        {
            servers = allServers;
        }
        else
        {
            servers = ServersRepository.GetServersByCity(selectedCity);
        }

        StateHasChanged();
    }
}
